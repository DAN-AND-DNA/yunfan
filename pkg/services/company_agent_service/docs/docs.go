// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/DAN-AND-DNA?tab=stars",
        "contact": {
            "name": "Snk技术开发中心",
            "email": "danyang.chen@snkad.cn"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1.company-agent-service.Get_company_data": {
            "post": {
                "description": "查询公司数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company-agent-service"
                ],
                "summary": "查询公司数据",
                "parameters": [
                    {
                        "description": "args",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company_agent_service.Get_company_data_args"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reply",
                        "schema": {
                            "$ref": "#/definitions/company_agent_service.Get_company_data_reply"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "company_agent_service.Company_data_info": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "company_agent_service.Get_company_data_args": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "company_agent_service.Get_company_data_reply": {
            "type": "object",
            "properties": {
                "err": {
                    "$ref": "#/definitions/errcode.Errcode"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/company_agent_service.Company_data_info"
                    }
                }
            }
        },
        "errcode.Errcode": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "错误码",
                    "type": "integer"
                },
                "from": {
                    "description": "来源 {3000: user_service}",
                    "type": "integer"
                },
                "msg": {
                    "description": "错误消息",
                    "type": "string",
                    "example": "错误消息"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "company-agent-service",
	Description: "公司代理服务",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
